# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/


stages:
  - test
  - deploy

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  # - python -V               # Print out python version for debugging
  - echo "CI START EXECUTION"

test:
  image: python:latest
  stage: test
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    # - python -m pytest "tests"
    - python -m unittest
  cache:
      untracked: true

pages:
  image: alpine:latest
  stage: deploy
  script:
  - echo 'Nothing to do...'
  artifacts:
    paths:
    - docs
  only:
  - develop

after_script:
  # - find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
  - echo "CI EXECUTED SUCCESSFULLY"
